<?php
/**
 +-----------------------------------------------------------------------------
 * @ 开灯问题
 +-----------------------------------------------------------------------------
 * 问题描述：有从1到n的依次编号的n个同学和n盏灯。1号同学将所有的灯都关掉；2号
 * 同学将编号为2的倍数的灯都打开；3号同学则将编号为3的倍数的灯做相反处理（该号
 * 灯如打开的，则关掉；如关闭的，则打开）；以后的同学都将自己编号的倍数的灯，作
 * 相反处理。问经n个同学的操作后，哪些灯是打开的？
 +-----------------------------------------------------------------------------
 * 问题分析：（1）前面已经学过用数组表示多个对象的某种状态，这里就定义有n个元素
 * 的a数组，它的每个下标变量a[i]视为一灯，i表示其编号。a[i]=1表示第i盏灯处于打
 * 开状态，a[i] = 0表示第i盏灯处于关闭状态。
 * （2）那么如何实现将第i盏灯作相反处理的开灯操作呢？大家马上想到的是用条件语句
 * if表示，通过算术运算a[i]为1时，a[i]被重新赋值为0；当a[i]为0时，a[i]被重新赋
 * 为1.这里要介绍的是，通过算术运算a[i]=1-a[i]，就能很好地模拟开关灯的操作。
 * 把这种形式的赋值语句形象地成为兵乓开关。
 +-----------------------------------------------------------------------------
 * 算法说明：算法中第二个for循环i枚举的不是灯的编号，而是编号为i的同学，其内层
 * 循环中，就将包含i因数的灯，也就是编号为i*k的灯，改变其状态。
 +-----------------------------------------------------------------------------
 */

$n = 100;
$a = array();

for ($i=1; $i <= $n; $i++) { 
	$a[$i] = 0;
}
// var_dump($a);
for ($i=2; $i <= $n; $i++) { 
	$k = 1;
	while ($i*$k <= $n) {
		$a[$i*$k] = 1 - $a[$i*$k];
		$k = $k + 1;
	}
}
// var_dump($a);
for ($i=1; $i <= $n; $i++) { 
	if ($a[$i] === 1) {
		echo "打开的灯有：". $i.'<br>';
	}
}



